version: "3.3"
services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch-oss:6.5.4
    container_name: elasticsearch
    environment:
      - "discovery.type=single-node"
      - "bootstrap.memory_lock=true"
      - "ES_JAVA_OPTS=-Xms32g -Xmx32g"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - type: volume
        consistency: delegated
        source: elasticsearch-data
        target: /usr/share/elasticsearch/data
        volume:
          nocopy: true
      - elasticsearch-config:/usr/share/elasticsearch/config/
#    ports:
#      - 9200:9200
    networks:
      br-elk:
        ipv4_address: 172.16.36.2

  logstash:
    image: docker.elastic.co/logstash/logstash-oss:6.5.4
    container_name: logstash
    environment:
      - "LS_JAVA_OPTS=-Xms16g -Xmx16g"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - logstash-data:/usr/share/logstash/data
      - logstash-config:/usr/share/logstash/config/
      - logstash-pipeline:/usr/share/logstash/pipeline
      - mapping-res:/usr/share/logstash/mapping
      - mappingprod-res:/usr/share/logstash/mappingprod
    networks:
      br-elk:
        ipv4_address: 172.16.36.4

  kibana:
    image: docker.elastic.co/kibana/kibana-oss:6.5.4
    container_name: kibana
    environment:
      SERVER_NAME: kibana
      SERVER_HOST: 172.16.36.5
      ELASTICSEARCH_URL: http://172.16.36.2:9200
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - kibana-config:/usr/share/kibana/config/
    networks:
      br-elk:
        ipv4_address: 172.16.36.5

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    environment:
      - "GF_SERVER_ROOT_URL=http://172.16.36.6"
      - "GF_SECURITY_ADMIN_PASSWORD=*******"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - grafana-config:/var/lib/grafana
      - grafana-setup:/etc/grafana
    networks:
      br-elk:
        ipv4_address: 172.16.36.6

  mapping:
    image: mapping:elk
    container_name: mapping
    environment:
      - "ExecPythonName=TenantIpMatch.py"
      - "OutputName=TenantIpMatches.yaml"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - mapping-src:/SRC
      - mapping-res:/RES
    networks:
      br-elk:
        ipv4_address: 172.16.36.10

  mappingprod:
    image: mapping:elk
    container_name: mappingprod
    environment:
      - "ExecPythonName=TenantIpMatch.py"
      - "OutputName=TenantIpMatches.yaml"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - mappingprod-src:/SRC
      - mappingprod-res:/RES
    networks:
      br-elk:
        ipv4_address: 172.16.36.11


volumes:
  elasticsearch-data:
    driver_opts:
      type: "nfs"
      o: "rw,relatime,sync,vers=4.0,rsize=32768,wsize=32768,namlen=255,acregmin=0,acregmax=0,acdirmin=0,acdirmax=0,hard,noac,proto=tcp,port=0,timeo=600,retrans=2,sec=sys,clientaddr=10.0.98.109,local_lock=none,addr=10.0.98.1"
      device: ":/export/openstack-elasticsearch/elk-volumes/elk-data"
  elasticsearch-config:
    driver: local
  logstash-config:
    driver: local
  logstash-data:
    driver: local
  logstash-pipeline:
    driver: local
  kibana-config:
    driver: local
  grafana-config:
    driver: local
  grafana-setup:
    driver: local
  mapping-src:
    driver: local
  mapping-res:
    driver: local
  mappingprod-src:
    driver: local
  mappingprod-res:
    driver: local

networks:
  br-elk:
    external:
      name: br-elk
