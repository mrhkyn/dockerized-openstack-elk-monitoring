input {
  beats {
    port => 5044
  }
  udp {
    port =>  31338
    codec => msgpack
    type => ceilometer
    tags => "ceilometer"
  }

  udp {
    port => 5567 
    tags => "netflow"
    type => netflow
    codec => netflow  
  }

  udp {
    port => 5566
    tags => "netflowprod"
    type => netflowprod
    codec => netflow
  }


  udp {
    port => 25826
    buffer_size => 1452
    codec => collectd { }
    tags => "collectdceph"
    type => collectdceph
  }

}

filter {
      if [type] == "ceilometer" and [counter_name] == "bandwidth" {
        date {
          match => [ "timestamp", "YYY-MM-dd HH:mm:ss.SSSSSS" ]
          remove_field => "timestamp"
          timezone => "UTC"
        }
      }
      if [type] == "ceilometer" and [counter_name] == "volume" {
        date {
          match => [ "timestamp", "YYY-MM-dd HH:mm:ss.SSSSSS" ]
          remove_field => "timestamp"
          timezone => "UTC"
        }
        date {
          match =>["[resource_metadata][created_at]","YYY-MM-dd HH:mm:ss"]
          remove_field => "[resource_metadata][created_at]"
          target => "[resource_metadata][created_at_parsed]"
          timezone => "UTC"
        }
      }
      if [type] == "ceilometer" and [counter_name] == "volume.size" {
        date {
          match => [ "timestamp", "YYY-MM-dd HH:mm:ss.SSSSSS" ]
          remove_field => "timestamp"
          timezone => "UTC"
        }
        date {
          match =>["[resource_metadata][created_at]","YYY-MM-dd HH:mm:ss"]
          remove_field => "[resource_metadata][created_at]"
          target => "[resource_metadata][created_at_parsed]"
          timezone => "UTC"
        }
      }
      if [type] == "netflow" {
        translate {
          field => "[netflow][ipv4_src_addr]"
          destination => "[netflow][tenantID]"
          dictionary_path => "/usr/share/logstash/mapping/TenantIpMatches.yaml"
          add_field => {
            "[netflow][direction]" => "incoming"
          }
        }
        translate {
          field => "[netflow][ipv4_dst_addr]"
          destination => "[netflow][tenantID]"
          dictionary_path => "/usr/share/logstash/mapping/TenantIpMatches.yaml"
          add_field => {
            "[netflow][direction]" => "outgoing"
          }
        }
      }
      if [type] == "netflowprod" {
        translate {
          field => "[netflow][ipv4_src_addr]"
          destination => "[netflow][tenantID]"
          dictionary_path => "/usr/share/logstash/mappingprod/TenantIpMatches.yaml"
          add_field => {
            "[netflow][direction]" => "incoming"
          }
        }
        translate {
          field => "[netflow][ipv4_dst_addr]"
          destination => "[netflow][tenantID]"
          dictionary_path => "/usr/share/logstash/mappingprod/TenantIpMatches.yaml"
          add_field => {
            "[netflow][direction]" => "outgoing"
          }
        }
      }

}

output {

  if "ceilometer" in [tags] {
    elasticsearch {
                  index => "logstash-ceilometer-%{+YYYY.MM.dd}"
                  hosts =>  ["172.26.36.2:9200"]
    }
  }

  if "netflow" in [tags] {
    elasticsearch {
                  index => "netflow-new-%{+YYYY.MM.dd}"
                  hosts =>  ["172.26.36.2:9200"]
    }
  }

  if "netflowprod" in [tags] {
    elasticsearch {
                  index => "netflow-prod-new-%{+YYYY.MM.dd}"
                  hosts =>  ["172.26.36.2:9200"]
    }
  }

  if "collectdceph" in [tags] {
    elasticsearch {
                  index => "collectdceph-%{+YYYY.MM.dd}"
                  hosts =>  ["172.26.36.2:9200"]
    }
  }


}

